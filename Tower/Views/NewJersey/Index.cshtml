@model Tower.ViewModels.NJReportView

@{
    ViewBag.Title = "New Jersey Certificates";
}
@{
    Layout = "~/views/shared/_NJLayout.cshtml";
    
}
<h2>New Jersey Certificates</h2>


<p>
  
</p>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myform" }))
{


    <div class="col-md-4">
        @Html.DropDownListFor(model => model.Township, Model.qtown, String.Empty, htmlAttributes: new { @class = "form-control ddlist", @id = "Township" })
       
    </div>
    
    <div id="download" style="display:none;">
        
        <div class="form-group">
           
            <div class="col-md-8 pull-left">
                <input type="submit" id="excel" value="Download Data" class="btn btn-primary" />
            </div>
        </div>
    </div>
    <div class="container">
       <ul id="discussion"></ul>
</div>
  


}
       <div id="partialPlaceHolder" style="display:none;"></div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            //// Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //// Set initial focus to message input box.
            //$('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}